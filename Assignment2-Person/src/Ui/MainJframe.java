/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ui;

import java.awt.CardLayout;
import javax.swing.JOptionPane;
import person.Person;
import person.Address;
import person.Persondirectory;


/**
 *
 * @author Ram
 */
public class MainJframe extends javax.swing.JFrame {
    private Persondirectory person;
    /**
     * Creates new form MainJframe
     */
    public MainJframe() {
        initComponents();
        this.person= new Persondirectory();
        prepopulate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        AddButton = new javax.swing.JButton();
        ViewButton = new javax.swing.JButton();
        SearchText = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        Right = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(237, 247, 255));

        AddButton.setText("Add or Edit");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        ViewButton.setText("View the list");
        ViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewButtonActionPerformed(evt);
            }
        });

        SearchButton.setText("Search for person");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ViewButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SearchText)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(AddButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ViewButton)
                .addGap(44, 44, 44)
                .addComponent(SearchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SearchButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel1);

        Right.setBackground(new java.awt.Color(255, 255, 255));
        Right.setLayout(new java.awt.CardLayout());
        jSplitPane1.setRightComponent(Right);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
         String result= SearchText.getText();
            if (result == null){
               JOptionPane.showMessageDialog(null,"Enter text", "Information", JOptionPane.INFORMATION_MESSAGE);            

            }   
            else if(person.searchPerson(result)){
            Person r = person.searchgetPerson(result);
            viewpanel pan= new viewpanel(Right, r);
            Right.add("viewpanel",pan);
            CardLayout layout = (CardLayout) Right.getLayout();
            layout.next(Right);}
         
            else{
                               JOptionPane.showMessageDialog(null,"Person doesn't exist", "Information", JOptionPane.INFORMATION_MESSAGE);            

            }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:
        addpanel panel = new addpanel(Right,person);
        Right.add("addpanel",panel); 
        CardLayout layout = (CardLayout) Right.getLayout();
        layout.next(Right);
    }//GEN-LAST:event_AddButtonActionPerformed

    private void ViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewButtonActionPerformed
        Listperson panel = new Listperson(Right, person);
        Right.add("Listperson", panel);
        CardLayout layout = (CardLayout) Right.getLayout();
        layout.next(Right);
    }//GEN-LAST:event_ViewButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJframe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJframe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JPanel Right;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField SearchText;
    private javax.swing.JButton ViewButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables
    
    private void prepopulate() {
       
        preppop("New York", "NY", "5th Avenue", "1001", "10001",
                                     "Los Angeles", "CA", "Sunset Boulevard", "101", "90001",
                                     "John", "Doe", "123456789", "1234567");
        
      
        preppop("Chicago", "IL", "Lake Shore Drive", "202", "60001",
                                     "Houston", "TX", "Main Street", "303", "77001",
                                     "Jane", "Smith", "987654321", "9876543");
        
    
        preppop("San Francisco", "CA", "Market Street", "404", "94101",
                                     "Miami", "FL", "Ocean Drive", "505", "33101",
                                     "Alice", "Johnson", "123987654", "1239876");
        
        preppop("Seattle", "WA", "Pine Street", "606", "98101",
                                     "Atlanta", "GA", "Peachtree Street", "707", "30301",
                                     "Bob", "Williams", "45689123", "4567891");
        
        preppop("Boston", "MA", "Commonwealth Avenue", "808", "02101",
                                     "Denver", "CO", "Larimer Square", "909", "80201",
                                     "Carol", "Davis", "789123456", "7891234");        
//        Object[] r1= {"ram","shankar","chennai","600028","bnglr","20000"};
//        Object[] r2= {"nick","j","newyork","04028","qubec","42522"};
//        Object[] r3= {"carl","max","tempe","60028","florida","23500"};
//        Object[] r4= {"srunith","sai","kochi","60338","bangkok","7377"};
//        Object[] r5= {"ninja","hattori","beijing","82224","seattle","94880"};
//        model.addRow(r1);
//        model.addRow(r2);
//        model.addRow(r3);
//        model.addRow(r4);
//        model.addRow(r5);

    }

    private void preppop(String hcity, String hstate, String hsn, String hunit, String hzip,String wcity, String wstate, String wsn, String wunit, String wzip,String Fn, String Ln, String ssn, String license)
    {
           Address address = new Address();
           Address address1 = new Address();
           Person Persondirectory = person.addPerson();
           
           address.setCity(hcity);
           address.setState(hstate);
           address.setStreetName(hsn);
           address.setUnit(hunit);
           address.setZipcode(Integer.parseInt(hzip));
           address1.setCity(wcity);
           address1.setState(wstate);
           address1.setStreetName(wsn);
           address1.setUnit(wunit);
           address1.setZipcode(Integer.parseInt(wzip));
           
           Persondirectory.setFirstName(Fn);
           Persondirectory.setLastName(Ln);
           Persondirectory.setSSN(Integer.parseInt(ssn));
           Persondirectory.setLicense(Integer.parseInt(license));
           Persondirectory.setHomeaddress(address);
           Persondirectory.setWorkaddress(address1);    }
}
